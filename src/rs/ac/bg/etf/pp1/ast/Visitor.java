// generated with ast extension for cup
// version 0.8
// 16/0/2018 23:40:1


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Program program);
    public void visit(CloseExpression closeExpression);
    public void visit(TypeConst typeConst);
    public void visit(FormParsOpt formParsOpt);
    public void visit(Designator designator);
    public void visit(ActParamsOpt actParamsOpt);
    public void visit(Condition condition);
    public void visit(LocalVars localVars);
    public void visit(GlobalList globalList);
    public void visit(Matched matched);
    public void visit(ExtendsClass extendsClass);
    public void visit(DesignatorStatement designatorStatement);
    public void visit(MethodDeclList methodDeclList);
    public void visit(ConstDeclCommonPrefix constDeclCommonPrefix);
    public void visit(Mulop mulop);
    public void visit(PrintConstArguments printConstArguments);
    public void visit(Relop relop);
    public void visit(MethodDeclListOpt methodDeclListOpt);
    public void visit(CondFact condFact);
    public void visit(FormPars formPars);
    public void visit(Var var);
    public void visit(Statement statement);
    public void visit(ClassDecl classDecl);
    public void visit(Addop addop);
    public void visit(Term term);
    public void visit(FormalParam formalParam);
    public void visit(GlobalDecl globalDecl);
    public void visit(TermList termList);
    public void visit(Unmatched unmatched);
    public void visit(VarDeclList varDeclList);
    public void visit(TypeVoid typeVoid);
    public void visit(DesignatorStatementSuffix designatorStatementSuffix);
    public void visit(StatementList statementList);
    public void visit(MethodDecl methodDecl);
    public void visit(OpenExpression openExpression);
    public void visit(Expr expr);
    public void visit(ConstDeclarations constDeclarations);
    public void visit(CondTerm condTerm);
    public void visit(Factor factor);
    public void visit(ActParams actParams);
    public void visit(VarDecl varDecl);
    public void visit(ConstDeclValue constDeclValue);
    public void visit(Type type);
    public void visit(EndExp EndExp);
    public void visit(StartExp StartExp);
    public void visit(TermExpr TermExpr);
    public void visit(AddExpr AddExpr);
    public void visit(NoActualParams NoActualParams);
    public void visit(ActualParams ActualParams);
    public void visit(DesignatorPostDecrement DesignatorPostDecrement);
    public void visit(DesignatorPostIncrement DesignatorPostIncrement);
    public void visit(DesignatorFunctionParams DesignatorFunctionParams);
    public void visit(DesignatorExpression DesignatorExpression);
    public void visit(WhileLoopUnmatched WhileLoopUnmatched);
    public void visit(WhileLoopMatched WhileLoopMatched);
    public void visit(NoPrintArguments NoPrintArguments);
    public void visit(PrintArguments PrintArguments);
    public void visit(StatementsInScope StatementsInScope);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnVoidStatement ReturnVoidStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(MatchedWhile MatchedWhile);
    public void visit(MatchedIf MatchedIf);
    public void visit(DesignatorExpressionStatement DesignatorExpressionStatement);
    public void visit(UnmatchedWhile UnmatchedWhile);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnamtechdIf UnamtechdIf);
    public void visit(NoStatementList NoStatementList);
    public void visit(Statements Statements);
    public void visit(FormPar FormPar);
    public void visit(NoFormalParameters NoFormalParameters);
    public void visit(FormalParams FormalParams);
    public void visit(NoMethodDeclaration NoMethodDeclaration);
    public void visit(MethodDeclarationsInScope MethodDeclarationsInScope);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(MethodName MethodName);
    public void visit(VoidType VoidType);
    public void visit(ActualType ActualType);
    public void visit(CharRef CharRef);
    public void visit(IntRef IntRef);
    public void visit(BoolRef BoolRef);
    public void visit(ExtendsObject ExtendsObject);
    public void visit(ExtendsBaseClass ExtendsBaseClass);
    public void visit(ErrorVarArrayDeclaration ErrorVarArrayDeclaration);
    public void visit(Array Array);
    public void visit(ErrorVarDeclaration ErrorVarDeclaration);
    public void visit(Variable Variable);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(NoLocals NoLocals);
    public void visit(LocalVariables LocalVariables);
    public void visit(ErrorConstDeclaration ErrorConstDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(Constant Constant);
    public void visit(ErrorConstantDeclarationsComma ErrorConstantDeclarationsComma);
    public void visit(Constants Constants);
    public void visit(ConstCommonPrefix ConstCommonPrefix);
    public void visit(GlobalClass GlobalClass);
    public void visit(GlobalVar GlobalVar);
    public void visit(GlobalConst GlobalConst);
    public void visit(NoGlobals NoGlobals);
    public void visit(GlobalDeclarations GlobalDeclarations);
    public void visit(ProgId ProgId);
    public void visit(ModExp ModExp);
    public void visit(DivExp DivExp);
    public void visit(MulExp MulExp);
    public void visit(MinusOp MinusOp);
    public void visit(PlusOp PlusOp);
    public void visit(IsLessOrEqualOp IsLessOrEqualOp);
    public void visit(IsLessOp IsLessOp);
    public void visit(IsGreaterOrEqualOp IsGreaterOrEqualOp);
    public void visit(IsGreaterOp IsGreaterOp);
    public void visit(IsNotEqualOp IsNotEqualOp);
    public void visit(IsEqualOp IsEqualOp);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorArrayElement DesignatorArrayElement);
    public void visit(DesignatorField DesignatorField);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewArgumentArrayFactor NewArgumentArrayFactor);
    public void visit(NewArgumentFactor NewArgumentFactor);
    public void visit(ConstFactor ConstFactor);
    public void visit(DesignatorFunctionFactor DesignatorFunctionFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(FactorTerm FactorTerm);
    public void visit(MulTerm MulTerm);
    public void visit(NegativeTermListExpr NegativeTermListExpr);
    public void visit(TermListExpr TermListExpr);
    public void visit(ExprFact ExprFact);
    public void visit(CondFactRelation CondFactRelation);
    public void visit(CondFactTerm CondFactTerm);
    public void visit(CondTermAnd CondTermAnd);
    public void visit(SimpleCondition SimpleCondition);
    public void visit(ComplexCondition ComplexCondition);
    public void visit(ExprParam ExprParam);
    public void visit(ActParamsAdjoined ActParamsAdjoined);
    public void visit(ErrorDesignatorStatementSyntax ErrorDesignatorStatementSyntax);
    public void visit(DesignatorStatementDeclaration DesignatorStatementDeclaration);
    public void visit(UnamtchedStatement UnamtchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(TypeIdentifier TypeIdentifier);
    public void visit(FormalParameter FormalParameter);
    public void visit(FormalParameters FormalParameters);
    public void visit(MethodBody MethodBody);
    public void visit(ClassDefinition ClassDefinition);
    public void visit(VariableDefinition VariableDefinition);
    public void visit(ConstDecl ConstDecl);
    public void visit(ProgramImpl ProgramImpl);

}
